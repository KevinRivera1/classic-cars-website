---
import { getFilters } from "@/core/usecases/getFilters";

const filters = await getFilters();
---

<script>
  const d = document;

  d.addEventListener("DOMContentLoaded", () => {
    const dropdownToggles = document.querySelectorAll(
      '[data-toggle="dropdown"]'
    );

    dropdownToggles.forEach((toggle) => {
      toggle.addEventListener("click", (event) => {
        event.stopPropagation();

        const dropdownContent = toggle.nextElementSibling;

        if (
          dropdownContent &&
          dropdownContent.hasAttribute("data-dropdown-content")
        ) {
          dropdownContent.classList.toggle("hidden");
        }
      });
    });

    document.addEventListener("click", (event) => {
      const dropdownContents = document.querySelectorAll(
        "[data-dropdown-content]"
      );
      dropdownContents.forEach((content) => {
        if (!content.contains(event.target as Node)) {
          content.classList.add("hidden");
        }
      });
    });
  });
</script>

<aside class={`overflow-hidden ${Astro.props.class}`} aria-label="Filters">
  <div class="p-4">
    <h2 class="flex justify-start items-center w-full gap-x-2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        width="24"
        height="24"
        stroke-width="2"
      >
        <path
          d="M4 4h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v7l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227z"
        ></path>
      </svg>
      Filter
    </h2>
  </div>
  <nav>
    <ul>
      {
        filters.map((category) => {
          return (
            <li class="p-4" data-category={category.name}>
              <span
                class="flex justify-between items-center w-full gap-x-4 hover:text-amber-400 active:text-amber-400 cursor-pointer"
                data-toggle="dropdown"
              >
                {category.name}
                {category.subItems && category.subItems.length > 0 && (
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    width="24"
                    height="24"
                    stroke-width="2"
                  >
                    <path d="M6 9l6 6l6 -6" />
                  </svg>
                )}
              </span>
              <ul
                class="hidden overflow-hidden transition-all duration-300 ease-in-out"
                data-dropdown-content
              >
                {category.subItems?.map((subItem) => {
                  return (
                    <li class="hover:text-amber-400 active:text-amber-400 cursor-pointer flex">
                      <svg
                        class="text-amber-400"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        width="24"
                        height="24"
                        stroke-width="2"
                      >
                        <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
                      </svg>
                      <a href={subItem.link}>{subItem.name}</a>
                    </li>
                  );
                })}
              </ul>
            </li>
          );
        })
      }
    </ul>
  </nav>
</aside>
